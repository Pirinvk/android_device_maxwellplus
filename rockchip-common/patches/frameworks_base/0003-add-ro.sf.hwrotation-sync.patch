From 97036f8079b123360ef880c62973242a577633d0 Mon Sep 17 00:00:00 2001
From: Liu Xiaowen <b37945@freescale.com>
Date: Mon, 27 Jan 2014 10:40:03 +0800
Subject: [PATCH 34/39] 0003-add-ro.sf.hwrotation-sync.

modify touch screen area when set ro.sf.hwrotation.

Signed-off-by: Liu Xiaowen <b37945@freescale.com>
---
 services/input/InputReader.cpp | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/services/input/InputReader.cpp b/services/input/InputReader.cpp
index 03852a5..6c17128 100644
--- a/services/input/InputReader.cpp
+++ b/services/input/InputReader.cpp
@@ -13,6 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+/* Copyright (C) 2014 Freescale Semiconductor, Inc. */
 
 #define LOG_TAG "InputReader"
 
@@ -42,6 +43,7 @@
 #include "InputReader.h"
 
 #include <cutils/log.h>
+#include <cutils/properties.h>
 #include <input/Keyboard.h>
 #include <input/VirtualKeyMap.h>
 
@@ -2930,6 +2932,19 @@ void TouchInputMapper::configureSurface(nsecs_t when, bool* outResetNeeded) {
     int32_t rawWidth = mRawPointerAxes.x.maxValue - mRawPointerAxes.x.minValue + 1;
     int32_t rawHeight = mRawPointerAxes.y.maxValue - mRawPointerAxes.y.minValue + 1;
 
+    char hwrotBuf[PROPERTY_VALUE_MAX];
+    int32_t hwrotation = DISPLAY_ORIENTATION_0;
+    if (property_get("ro.sf.hwrotation", hwrotBuf, NULL) > 0) {
+        switch (atoi(hwrotBuf)) {
+            case 90:
+                hwrotation = DISPLAY_ORIENTATION_90;
+                break;
+            case 270:
+                hwrotation = DISPLAY_ORIENTATION_270;
+                break;
+        }
+    }
+
     // Get associated display dimensions.
     DisplayViewport newViewport;
     if (mParameters.hasAssociatedDisplay) {
@@ -2941,8 +2956,16 @@ void TouchInputMapper::configureSurface(nsecs_t when, bool* outResetNeeded) {
             mDeviceMode = DEVICE_MODE_DISABLED;
             return;
         }
+        newViewport.orientation = (newViewport.orientation + hwrotation) % 4;
     } else {
+        if ((hwrotation == DISPLAY_ORIENTATION_90 ||
+                hwrotation == DISPLAY_ORIENTATION_270)) {
+            int tmp = rawWidth;
+            rawWidth = rawHeight;
+            rawHeight = tmp;
+        }
         newViewport.setNonDisplayViewport(rawWidth, rawHeight);
+        newViewport.orientation = hwrotation;
     }
     bool viewportChanged = mViewport != newViewport;
     if (viewportChanged) {
-- 
1.8.0
